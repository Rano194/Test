-- MM2 FARM

if not game:IsLoaded() then 
    game.Loaded:Wait()
end

print("Info | Loading script")
Autofarm_Enable = false

-- Button Device Select
for i = 1, 60 do
    task.wait(0.5)
    local deviceSelect = player:FindFirstChild("PlayerGui") and player.PlayerGui:FindFirstChild("DeviceSelect")    
    if deviceSelect then
        local success = pcall(function()
            function button_click(button_obj)
                local events = {"MouseButton1Down", "MouseButton1Click", "Activated"}
        
                for _, event in pairs(events) do
                    for _, connection in pairs(getconnections(button_obj[event])) do
                        pcall(function()
                            connection:Fire()
                        end)
                    end
                end
            end
        
            local button_path = player.PlayerGui:WaitForChild("DeviceSelect", 10).Container.Phone.Button
        
            if button_path then
                button_click(button_path)
                return true 
            end
        end)

        if success then
            break
        end
    end
end

-- EVENT

-- Event Check Died
local Players = game:GetService("Players")

Players.LocalPlayer.CharacterAdded:Connect(function(character)
	character:WaitForChild("Humanoid").Died:Connect(function()
        print("Died")
		Autofarm_Enable = false
	end)
end)

-- Event Start Round
RoundStartEvent = game.ReplicatedStorage.Remotes.Gameplay.RoundStart
RoundStartEvent.OnClientEvent:Connect(function()
    print("Start event round")
	Autofarm_Enable = true
end)

-- Event End Round
RoundEndEvent = game.ReplicatedStorage.Remotes.Gameplay.RoundEndFade
RoundEndEvent.OnClientEvent:Connect(function()
    print("End event round")
	Autofarm_Enable = false
end)

-- Event Collected Coin
local Character = Players.LocalPlayer.Character or Players.LocalPlayer.CharacterAdded:Wait()

CoinCollectedEvent = game.ReplicatedStorage.Remotes.Gameplay.CoinCollected
CoinCollectedEvent.OnClientEvent:Connect(function(cointype, current, max)
    print(current, max)
	if tonumber(current) == tonumber(max) then
		Autofarm_Enable = false
        Players.LocalPlayer.Character.Humanoid.Health = 0
	end
end)

-- END EVENT

local TweenService = game:GetService("TweenService")
local Workspace = game:GetService("Workspace")
local Humanoid = Character:WaitForChild("Humanoid")

Players.LocalPlayer.CharacterAdded:Connect(function(char)
    Character = char
    Humanoid = char:WaitForChild("Humanoid")
end)

local attemptedCoins = {}
local range, coin, tween

-- Getting container coin
local function GetCoinContainer()
    for _, v in Workspace:GetChildren() do
        local CoinContainer = v:FindFirstChild("CoinContainer")
        if CoinContainer then
            return CoinContainer
        end
    end
end

-- Getting coin CFrame
local function GetCoin()
    local CoinContainer = GetCoinContainer()
    if CoinContainer then
        local nearestRange, bestCoin = math.huge
        for _, v in CoinContainer:GetChildren() do
            if v:FindFirstChild("TouchInterest") and not attemptedCoins[v] then
                local Magnitude = (Character:GetPivot().Position - v.Position).Magnitude
                if Magnitude < nearestRange then
                    nearestRange, bestCoin = Magnitude, v
                end
            end
        end
        return nearestRange, bestCoin
    end
end

-- Delete coin
local function SetupDescendantRemoving()
    Workspace.DescendantRemoving:Connect(function(descendant)
        if descendant == coin or descendant.Parent == coin then
            if tween then
                tween:Cancel()
                tween = nil
            end
            attemptedCoins[coin] = nil  
            coin = nil
        end
    end)
end

-- Autofarm
local function Tick()
    local success, err = pcall(function()
        if Character then
            range, coin = GetCoin()
            if coin then
                attemptedCoins[coin] = true
                local targetCFrame = coin.CFrame * CFrame.Angles(math.rad(90), 0, 0)
                tween = TweenService:Create(
                    Character.PrimaryPart,
                    TweenInfo.new(range / (Humanoid.WalkSpeed * 1.5 ), Enum.EasingStyle.Linear),
                    {CFrame = targetCFrame}
                )
                tween:Play()
                tween.Completed:Wait()
                tween = nil
            else
                attemptedCoins = {}
            end
        end
    end)

    if not success then
        warn("Error:", err)
    end
end


-- Run
SetupDescendantRemoving()

while task.wait() do
    if Autofarm_Enable == true then
        Tick()
    end
end
